
////slip6 Q1/////



#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define MAX 200

typedef struct dir
{
	char fname[20];
	int start;
	struct dir *next;
}NODE;

NODE *first,*last;
int bit[MAX],n,fb;
void init()
{
	int i;
	printf("Enter total no of disc blocks: ");
	scanf("%d",&n);
	fb=n;
	for(i=0;i<10;i++)
	{
		int k=rand()%n;
		bit[k]=-2;
		if(bit[k]!=-2)
		{
			fb--;
		}
	}
}
void show_bitvector()
{
	int i;
	for(i=0;i<n;i++)
	{
	printf("%d",bit[i]);
	}	
	printf("\n");
}
void show_dir()
{
	NODE *p;
	int i;
	printf("file\t chain\n");
	p=first;
	while(p!=NULL)
	{
		printf("%s\t",p->fname);
		i=p->start;
		while(i!=-1)
		{
			printf("%d->",i);
			i=bit[i];
		}
			printf("NULL\n");
			p=p->next;
	}
}
void create()
{
	NODE *p;
	char fname[20];
	int nob,i,j;
	printf("Enter the file name: ");
	scanf("%s",fname);
	printf("Enter no of blocks: ");
	scanf("%d",&nob);
	if(nob>fb)
	{
		printf("failed to create file %s\n",fname);
		return;
	}
	for(i=0;i<n;i++)
	{
		if(bit[i]==0)
		break;
	}
	p=(NODE*)malloc(sizeof(NODE));
	strcpy(p->fname,fname);
	p->start=i;
	p->next=NULL;
		if(first==NULL)
			first=p;
		else
			last->next=p;
			fb=nob;
			j=i+1;
			nob--;
			while(nob>0)
			{	
				if(bit[j]==0)
				{
					bit[i]=j;
					i=j;
					nob--;
				}
				j++;
			}
			bit[i]=-1;
			printf("file %s created successfully\n",fname);
}
void delete()
{
	NODE *p,*q;
	char fname[20];
	int i,j,nob=0;
	printf("Enter files to be deleted: ");
	scanf("%s",fname);
	p=q=first;
	while(p!=NULL)
	{
		if(strcmp(p->fname,fname)==0)
		break;
		q=p;
		p=p->next;
	}
	if(p==NULL)
	{
		printf("file %s not found\n",fname);
		return;
	}
	i=p->start;
	while(i!=-1)
	{
		nob++;
		j=i;
		i=bit[i];
		bit[j]=0;
	}
	fb+=nob;
	if(p==first)
		first=first->next;
	else
		if(p==last)
		{
			last=q;
			last->next=NULL;
		}
		else
		{
			q->next=p->next;
		}
		free(p);
		printf("file %s deleted successfully\n",fname);
}
int main()
{
	int ch;
	init();
	while(1)
	{
		printf("1.show bit vector\n2.create new file\n3.show directory\n4.delete file\n5.exit\n");
		printf("Enter your choice: ");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1:show_bitvector();
				break;
			case 2:create();		
				break;
			case 3:show_dir();
				break;
			case 4:delete();
				break;
			case 5:exit(0);
		}
	}
	return 0;
}

////slip6 Q2/////


#include<stdio.h>
#include<stdlib.h>
int main()
{
	int RQ[100],i,j,n,TotalHeadMoment=0,initial,size,move;
	printf("Enter the number of requests: \n");
	scanf("%d",&n);
	printf("Enter the Request sequence: \n");
	for(i=0;i<n;i++)
	scanf("%d",&RQ[i]);
	printf("Enter initial head position: \n");
	scanf("%d",&initial);
	printf("Enter total disk size: \n");
	scanf("%d",&size);
	printf("Enter the head movement direction for high 1 and for low 0 \n");
	scanf("%d",&move);
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			if(RQ[j]>RQ[j+1])
			{
				int temp;
				temp=RQ[j];
				RQ[j]=RQ[j+1];
				RQ[j+1]=temp;
			}
		}
	}
	int index;
	for(i=0;i<n;i++)
	{
		if(initial<RQ[i])
		{
			index=i;
			break;
		}
	}
	if(move==1)
	{
		for(i=index;i<n;i++)
		{
			TotalHeadMoment=TotalHeadMoment+abs(RQ[i]-initial);
			initial=RQ[i];
		}
		TotalHeadMoment=TotalHeadMoment+abs(size-RQ[i-1]-1);
		TotalHeadMoment=TotalHeadMoment+abs(size-1-0);
		initial=0;
		for(i=0;i<index;i++)
		{
			TotalHeadMoment=TotalHeadMoment+abs(RQ[i]-initial);
			initial=RQ[i];
		}
	}
	else
	{
		for(i=index-1;i>=0;i--)
		{
			
			TotalHeadMoment=TotalHeadMoment+abs(RQ[i]-initial);
			initial=RQ[i];
		}	
		TotalHeadMoment=TotalHeadMoment+abs(RQ[i+1]-0);
		TotalHeadMoment=TotalHeadMoment+abs(size-1-0);
		initial=size-1;
		for(i=n-1;i>=index;i--)
		{
			TotalHeadMoment=TotalHeadMoment+abs(RQ[i]-initial);
			initial=RQ[i];
		}
	}
	printf("Total Head movement is %d",TotalHeadMoment);
	return 0;
}



